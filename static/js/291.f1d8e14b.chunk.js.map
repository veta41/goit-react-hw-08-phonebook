{"version":3,"file":"static/js/291.f1d8e14b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.js","components/Contacts/ContactItem/ContactItems.styled.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/ContactList.styled.js","components/Contacts/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  row-gap: 20px;\n  font-size: 1.2em;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #e3e3e3;\n  border-radius: 10px;\n  margin-bottom: 24px;\n  width: 500px; ;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 50px;\n  width: 100%;\n  padding: 0 10px 0 10px;\n  border: 1px solid #91918d;\n  border-radius: 5px;\n  &::placeholder {\n    font-size: 12px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 50px;\n  background-color: #9e9e99;\n  color: white;\n  font-size: 25px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelector';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handlerChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n\n    const newContact = { name, phone };\n\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n      ? alert(`${name} already in contact`)\n      : dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <Label htmlFor=\"contact_name\">Name</Label>\n      <Input\n        onChange={handlerChange}\n        id=\"contact_name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"contact_number\">Number</Label>\n      <Input\n        onChange={handlerChange}\n        value={phone}\n        id=\"contact_number\"\n        type=\"tel\"\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\"> Add contact</Button>\n    </Form>\n  );\n}\n\nForm.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactCard = styled.li`\n  display: flex;\n \n  align-items: center;\n  justify-content: space-between;\n\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const Name = styled.span`\n  font-weight: 600;\n  width: 30%;\n`;\nexport const Number = styled.span`\n  font-weight: 700;\n  width: 30%;\n`;\nexport const DeleteBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  border-radius: 5px;\n  height: 30px;\n  padding: 17px 40px;\n  margin-left: 10px;\n  border: none;\n  background-color: #9e9e99;\n  color: white;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ContactCard, Name, DeleteBtn, Number } from './ContactItems.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nconst ContactListItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ContactCard>\n      <Name>{name} :</Name>\n      <Number>{phone}</Number>\n      <DeleteBtn type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </DeleteBtn>\n    </ContactCard>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  width: 500px;\n  border: 2px solid #b5b5a7;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\n\nimport ContactListItem from '../Contacts/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelector';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContactList = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const contactsList = filteredContactList();\n\n  return (\n    <List>\n      {isLoading && !error && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      {contactsList.length > 0 ? (\n        contactsList.map(({ name, id, phone }) => {\n          return <ContactListItem key={id} name={name} phone={phone} id={id} />;\n        })\n      ) : (\n        <p>Contact list is empty</p>\n      )}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto 24px;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  width: 450px;\n  height: 50px;\n  font-weight: 400;\n  font-size: 25px;\n  line-height: 1.25;\n  border: 2px solid #b5b5a7;\n  border-radius: 5px;\n`;\n\nexport const FilterText = styled.p`\n  font-weight: 600;\n  margin-bottom: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\nimport { Label, Input, FilterText } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\n  return (\n    <Label>\n      <FilterText>Find contacts by name</FilterText>\n      <Input onChange={onChangeFilter} type=\"text\" name=\"filter\" />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* width: 400px; */\n  text-align: center;\n  margin: 0 auto;\n  padding: 30px;\n  background-color: #fff;\n  /* box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.3); */\n`;\n\nexport const TitleH = styled.h1`\n  text-align: center;\n  color: #353535;\n  margin-bottom: 25px;\n`;\n\nexport const TitleH2 = styled.h2`\n  margin-top: 30px;\n  text-align: center;\n  color: #353535;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/Contacts/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { Container, TitleH, TitleH2 } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  return (\n    <Container>\n      <TitleH>Contacts book</TitleH>\n      <ContactForm />\n\n      <TitleH2>Contacts</TitleH2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","Label","Input","Button","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","propTypes","name","PropTypes","phone","useState","setName","setPhone","useSelector","dispatch","useDispatch","handlerChange","target","value","reset","onSubmit","event","preventDefault","newContact","find","contact","toLowerCase","alert","addContact","htmlFor","onChange","id","type","pattern","title","required","ContactCard","Name","Number","DeleteBtn","onClick","deleteContact","List","useEffect","fetchContacts","contactsList","normalizedFilter","toLocaleLowerCase","includes","filteredContactList","length","map","FilterText","e","changeFilter","Container","TitleH","TitleH2","ContactsPage","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}